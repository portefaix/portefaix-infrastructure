# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: GCP / Create

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'dev'
      tf_version:
        description: "Terraform version"
        required: true
        #datasource=github-tags depName=hashicorp/terraform
        default: '1.2.2'

permissions:
  contents: read

jobs:
  gcp_vpc:
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy VPC / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/vpc/${{ github.event.inputs.env }}

  gcp_cloud_dns:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud DNS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-dns/${{ github.event.inputs.env }}

  gcp_external_ip_cloud_nat:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "External IP for Cloud NAT / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-ips/cloud-nat/${{ github.event.inputs.env }}

  gcp_external_ip_external_lb:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "External IP for External Load Balancer / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-ips/external-lb/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-ips/external-lb/${{ github.event.inputs.env }}

  gcp_cloud_nat:
    needs: gcp_external_ip_cloud_nat
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud NAT / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-nat/${{ github.event.inputs.env }}

  gcp_artifact_registry:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Artifact Registry / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/artifact-registry/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/artifact-registry/${{ github.event.inputs.env }}

  gcp_pubsub:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "PubSub / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/pubsub/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/pubsub/${{ github.event.inputs.env }}

  gcp_cloud_armor:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud Armor / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cloud-armor/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cloud-armor/${{ github.event.inputs.env }}

  gcp_secrets:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Cloud Armor / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/secrets/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/secrets/${{ github.event.inputs.env }}

  gcp_internal_ip_internal_lb:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Internal IP for Internal Load Balancer / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/internal-ips/internal-lb/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/internal-ips/internal-lb/${{ github.event.inputs.env }}

  gcp_gke:
    needs:
      - gcp_cloud_nat
      - gcp_artifact_registry
      - gcp_pubsub
      - gcp_external_ip_external_lb
      - gcp_internal_ip_internal_lb
      - gcp_secrets
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "GKE / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/gke/${{ github.event.inputs.env }}
      env:
        TF_VAR_master_authorized_networks: "[{\"cidr_block\": \"${{ secrets.HOME_IP_ADDRESS }}\", \"display_name\": \"Home\"}]"

  # gcp_sops:
  #   needs: gcp_gke
  #   runs-on: ubuntu-latest
  #   steps:
  #   - run: |
  #       echo "Deploy Sops / ${{ github.event.inputs.env }}"

  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Setup Terraform
  #     uses: hashicorp/setup-terraform@v1
  #     with:
  #       terraform_version: ${{ github.event.inputs.tf_version }}
  #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #   # - name: Configure GCP credentials
  #   #   uses: google-github-actions/setup-gcloud@v0.2.1
  #   #   with:
  #   #     version: 324.0.0
  #   #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
  #   #     export_default_credentials: true

  #   # - name: Use gcloud CLI
  #   #   run: gcloud info

  #   - name: Terraform Init
  #     run: terraform init -upgrade
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Plan
  #     run: terraform plan
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  #   - name: Terraform Apply
  #     run: terraform apply -auto-approve
  #     working-directory: terraform/gcp/sops/${{ github.event.inputs.env }}

  gcp_observability:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy Observability / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/observability/${{ github.event.inputs.env }}

  gcp_cert_manager:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy CertManager / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/cert-manager/${{ github.event.inputs.env }}

  gcp_external_dns:
    needs: gcp_gke
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "Deploy External DNS / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ github.event.inputs.tf_version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # - name: Configure GCP credentials
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #     version: 324.0.0
    #     service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
    #     export_default_credentials: true

    # - name: Use gcloud CLI
    #   run: gcloud info

    - name: Terraform Init
      run: terraform init -upgrade
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform/gcp/external-dns/${{ github.event.inputs.env }}

  gcp_k8s:
    needs:
      # - gcp_sops
      - gcp_observability
      - gcp_cert_manager
      - gcp_external_dns
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2.0.1
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/portefaix-${{ github.event.inputs.env }}/locations/global/workloadIdentityPools/portefaix-${{ github.event.inputs.env }}/providers/portefaix-${{ github.event.inputs.env }}-github'
        service_account: 'terraform@portefaix-${{ github.event.inputs.env }}.iam.gserviceaccount.com'

    - id: get-gke-credentials
      name: Retrieve GKE credentials
      uses: google-github-actions/get-gke-credentials@v2.0.0
      with:
        cluster_name: portefaix-${{ github.event.inputs.env }}-cluster-gke
        location: europe-west1-c

    - id: get-pods
      name: List pods
      run: kubectl get pods -A

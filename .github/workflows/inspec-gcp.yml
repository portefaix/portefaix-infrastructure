# Copyright (C) Nicolas Lamirault <nicolas.lamirault@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

---
name: GCP / Inspec

env:
  CHEF_LICENSE: accept

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        default: 'prod'

permissions:
  contents: read

jobs:
  gcp_cis:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Inspect CIS on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec debug
      run: make -f hack/gcp.mk inspec-gcp-debug

    - name: Inspec CIS
      run: make -f hack/gcp.mk inspec-gcp-cis ENV=${{ github.event.inputs.env }}

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE= ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_vpc:
    needs: gcp_cis
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/vpc ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_gke:
    needs: gcp_vpc
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/gke ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_sops:
    needs: gcp_gke
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/sops ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_observability:
    needs: gcp_gke
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/observability ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_velero:
    needs: gcp_gke
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/velero ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_vector:
    needs: gcp_gke
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/vector ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html

  gcp_external_dns:
    needs: gcp_gke
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7']
    steps:
    - run: |
        echo "Test Portefaix on GCP / ${{ github.event.inputs.env }}"

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Configure GCP credentials
      uses: google-github-actions/setup-gcloud@v2.0.1
      with:
        version: 324.0.0
        # project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
        service_account_key: ${{ secrets.GCP_SA_KEY_PROD }}
        export_default_credentials: true

    - name: Use gcloud CLI
      run: gcloud info

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install Chef Inspec
      run: curl https://omnitruck.chef.io/install.sh | sudo bash -s -- -P inspec

    - name: Inspec test
      run: make -f hack/gcp.mk inspec-gcp-test SERVICE=terraform/gcp/external-dns ENV=${{ github.event.inputs.env }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Inspect report
        path: ./portefaix-${{ github.event.inputs.env }}_scan.html
